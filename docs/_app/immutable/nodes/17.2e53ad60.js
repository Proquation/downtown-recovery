import{S as Ft,i as Vt,s as Rt,y as Jt,a as l,k as o,q as t,z as Lt,c,l as n,m as s,r as a,h as i,n as g,A as Yt,b as $t,C as e,D as Kt,g as Qt,d as Xt,B as Zt}from"../chunks/index.a4677e45.js";import{H as ea}from"../chunks/global.2cdf0447.js";const ta=!0,na=Object.freeze(Object.defineProperty({__proto__:null,prerender:ta},Symbol.toStringTag,{value:"Module"}));function aa(Nt){let y,Z,m,r,D,ie,oe,U,ne,se,O,re,de,P,he,le,j,ce,ue,M,pe,fe,b,me,_,ve,we,ge,H,ye,be,B,Se,_e,x,Ee,Te,W,ze,Ce,G,Ae,ke,E,Ie,T,qe,De,$,Ue,d,N,Oe,Pe,F,je,Me,V,He,Be,p,xe,z,We,Ge,C,$e,Ne,A,Fe,Ve,k,Re,Je,I,Le,Ye,Ke,R,Qe,Xe,J,Ze,et,L,tt,at,Y,it,ot,S,nt,q,st,rt,dt,K,ht,lt,Q,ct,ut,X,ee;return y=new ea({}),{c(){Jt(y.$$.fragment),Z=l(),m=o("main"),r=o("div"),D=o("h1"),ie=t("Methodology"),oe=l(),U=o("p"),ne=t("The recovery metrics on these charts are based on a sample of mobile phone data."),se=l(),O=o("p"),re=t("The recovery metrics on the charts and maps are computed by counting the number of unique visitors in a city's downtown area in the specified time period (standardized by region – see ‘Standardization’ section below), and then dividing it by the standardized number of unique visitors during the equivalent time period in 2019."),de=l(),P=o("p"),he=t("A recovery metric greater than 100% means that the mobile device activity increased from the comparison period. A value less than 100% means the opposite, that the city's downtown has not recovered to pre-COVID activity levels."),le=l(),j=o("h2"),ce=t("Downtown Geography Selection"),ue=l(),M=o("p"),pe=t("Our previous method for creating downtown polygons involved selecting zip codes with the highest job density. Our updated polygon definitions are more precise and do not rely as heavily on administrative or census boundaries, which often do not reflect the actual geographies of cities’ downtowns. To create these new definitions, we used jobs data to identify concentrations of jobs on individual blocks and then drew a polygon around these clusters to represent downtown. (For more details, see below)."),fe=l(),b=o("p"),me=t("Click "),_=o("a"),ve=t("here"),we=t(" to download a geojson file of the downtown boundaries."),ge=l(),H=o("h2"),ye=t("Standardization"),be=l(),B=o("p"),Se=t("Because fluctuations in unique device counts over time may reflect changes in sample sizes from data providers rather than actual changes in activity, we standardized the downtown counts using larger geographies. In our previous method, this was the state (in the U.S.) or province (in Canada). Our updated method instead standardizes the data using core based statistical areas (in the U.S.) and census metropolitan areas (in Canada). Standardization using these smaller areas results in more accurate recovery rates, since a city’s downtown is not affected by the activity patterns of other cities in the same state."),_e=l(),x=o("h2"),Ee=t("Data Providers & Imputation"),Te=l(),W=o("p"),ze=t("Our mobile device data provider, Spectus, sources information from multiple providers. The most reliable source lacks data before May 2021, so we imputed this information using data from other providers (for more details, see below)."),Ce=l(),G=o("h2"),Ae=t("Website:"),ke=l(),E=o("p"),Ie=t("This website was built using Svelte with a bit of D3 for the charts. Code is on "),T=o("a"),qe=t("GitHub"),De=l(),$=o("div"),Ue=l(),d=o("div"),N=o("h1"),Oe=t("Detailed Methodology"),Pe=l(),F=o("h2"),je=t("Downtown Geography Selection"),Me=l(),V=o("p"),He=t("Our previous method for creating downtown polygons involved selecting zip codes with the highest job density. Our updated polygon definitions are more precise and do not rely as heavily on administrative or census boundaries, which often do not reflect the actual geographies of cities’ downtowns."),Be=l(),p=o("p"),xe=t("To create these new definitions, we used jobs data from 2019 ("),z=o("a"),We=t("in the U.S."),Ge=t(") and 2016 ("),C=o("a"),$e=t("in Canada"),Ne=t("). We generated 1 randomly scattered point for every 100 jobs in each block (in the U.S.) or dissemination area (in Canada). We then applied the "),A=o("a"),Fe=t("HDBSCAN"),Ve=t(" algorithm to each city individually to create clusters of points within the city, discarding the points designated as “noise” and tuning the parameters to select a cluster representing each city’s downtown. For this step, we validated these geographies using Google Maps, cities’ own definitions of their downtowns, our personal knowledge of certain cities, and Brookings’ 2023 "),k=o("a"),Re=t("definitions of downtowns"),Je=t(" across the U.S. Next, we created a buffer around each point in the cluster and created a polygon from the spatial union of these buffers. Lastly, we formed a "),I=o("a"),Le=t("concave hull"),Ye=t(" around this polygon to create the final downtown area."),Ke=l(),R=o("h2"),Qe=t("Standardization"),Xe=l(),J=o("p"),Ze=t("Because fluctuations in unique device counts over time may reflect changes in sample sizes from data providers rather than actual changes in activity, we standardized the downtown counts using larger geographies. In other words, instead of tracking the raw numbers of unique devices in a downtown area over time, we tracked unique device counts in the downtown divided by unique device counts in a larger area."),et=l(),L=o("p"),tt=t("In our previous method, this “larger area” was the state (in the U.S.) or province (in Canada). Our updated method instead standardizes the data using core based statistical areas (in the U.S.) and census metropolitan areas (in Canada). Standardization using these smaller areas results in more accurate recovery rates, since a city’s downtown is not affected by the activity patterns of other cities in the same state."),at=l(),Y=o("h2"),it=t("Data Providers & Imputation"),ot=l(),S=o("p"),nt=t("Spectus, a data provider, sources information from two different providers. Although one provider supplies the counts of mobile phone data between 2019 and 2023 in the US and Canada, the sample size of the data has been significantly declined, which is likely to hinder the accuracy of estimated recovery rates. On the other hand, another provider offers more comprehensive data covering the US and Canada, but this provider does not include Canadian data before May 2021. To address this gap, we employed the Self-Attention-based Imputation for Time Series (SAITS) model developed by "),q=o("a"),st=t("Wenjie, David, & Yan in 2023"),rt=t(". Before initiating the imputation process, our underlying hypothesis for imputation was that if we had Canadian data before May 2021, it might show trends similar to those in the US and Canadian cities for two providers."),dt=l(),K=o("p"),ht=t("The SAITS model, which employs self-attention techniques, is well-known for capturing dependencies in sequential data, similar to its use in language translation. The approach helps identify relationships within time series data and impute missing information based on observed trends. The overall process of SAITS is that it first converts randomly selected observed values into missing values. Through a series of operations, the model results in the predicted missing values. Finally, the model compares the predicted and original values of artificially created missing values, which allows us to estimate the accuracy of the imputation. In this process, the model is trained for imputation, and the successfully trained model can impute the missing data."),lt=l(),Q=o("p"),ct=t("We applied the SAITS model to fill in missing data in Canadian cities from Jan 2019 to May 2021, with a focus on normalizing user ratios. To achieve this goal, the weekly normalizing user ratios data of cities in the US and Canada by two providers was built. Observed data was filled with actual values, whereas the missing data was filled with no value. This resulted in a matrix in which the rows and columns showed the week and value of two providers of all study areas, respectively. After preparing the data, we flipped it chronologically and split it into training and test sets. The training set included 70% of the data, and the remaining part served as the test data. Hyperparameters were tuned through grid search, considering the number of iterations, learning rates, and dropout rates. The model's performance was evaluated using Root Mean Squared Error (RMSE). We found that 130 iterations, 0.001 learning rates, and 0.2 dropout rates were the best combination. Based on the trained model using this hyperparameter combination, the missing data was imputed."),ut=l(),X=o("div"),this.h()},l(f){Lt(y.$$.fragment,f),Z=c(f),m=n(f,"MAIN",{});var v=s(m);r=n(v,"DIV",{class:!0});var h=s(r);D=n(h,"H1",{});var ft=s(D);ie=a(ft,"Methodology"),ft.forEach(i),oe=c(h),U=n(h,"P",{});var mt=s(U);ne=a(mt,"The recovery metrics on these charts are based on a sample of mobile phone data."),mt.forEach(i),se=c(h),O=n(h,"P",{});var vt=s(O);re=a(vt,"The recovery metrics on the charts and maps are computed by counting the number of unique visitors in a city's downtown area in the specified time period (standardized by region – see ‘Standardization’ section below), and then dividing it by the standardized number of unique visitors during the equivalent time period in 2019."),vt.forEach(i),de=c(h),P=n(h,"P",{});var wt=s(P);he=a(wt,"A recovery metric greater than 100% means that the mobile device activity increased from the comparison period. A value less than 100% means the opposite, that the city's downtown has not recovered to pre-COVID activity levels."),wt.forEach(i),le=c(h),j=n(h,"H2",{});var gt=s(j);ce=a(gt,"Downtown Geography Selection"),gt.forEach(i),ue=c(h),M=n(h,"P",{});var yt=s(M);pe=a(yt,"Our previous method for creating downtown polygons involved selecting zip codes with the highest job density. Our updated polygon definitions are more precise and do not rely as heavily on administrative or census boundaries, which often do not reflect the actual geographies of cities’ downtowns. To create these new definitions, we used jobs data to identify concentrations of jobs on individual blocks and then drew a polygon around these clusters to represent downtown. (For more details, see below)."),yt.forEach(i),fe=c(h),b=n(h,"P",{});var te=s(b);me=a(te,"Click "),_=n(te,"A",{href:!0});var bt=s(_);ve=a(bt,"here"),bt.forEach(i),we=a(te," to download a geojson file of the downtown boundaries."),te.forEach(i),ge=c(h),H=n(h,"H2",{});var St=s(H);ye=a(St,"Standardization"),St.forEach(i),be=c(h),B=n(h,"P",{});var _t=s(B);Se=a(_t,"Because fluctuations in unique device counts over time may reflect changes in sample sizes from data providers rather than actual changes in activity, we standardized the downtown counts using larger geographies. In our previous method, this was the state (in the U.S.) or province (in Canada). Our updated method instead standardizes the data using core based statistical areas (in the U.S.) and census metropolitan areas (in Canada). Standardization using these smaller areas results in more accurate recovery rates, since a city’s downtown is not affected by the activity patterns of other cities in the same state."),_t.forEach(i),_e=c(h),x=n(h,"H2",{});var Et=s(x);Ee=a(Et,"Data Providers & Imputation"),Et.forEach(i),Te=c(h),W=n(h,"P",{});var Tt=s(W);ze=a(Tt,"Our mobile device data provider, Spectus, sources information from multiple providers. The most reliable source lacks data before May 2021, so we imputed this information using data from other providers (for more details, see below)."),Tt.forEach(i),Ce=c(h),G=n(h,"H2",{});var zt=s(G);Ae=a(zt,"Website:"),zt.forEach(i),ke=c(h),E=n(h,"P",{});var pt=s(E);Ie=a(pt,"This website was built using Svelte with a bit of D3 for the charts. Code is on "),T=n(pt,"A",{href:!0});var Ct=s(T);qe=a(Ct,"GitHub"),Ct.forEach(i),pt.forEach(i),h.forEach(i),De=c(v),$=n(v,"DIV",{class:!0}),s($).forEach(i),Ue=c(v),d=n(v,"DIV",{class:!0});var u=s(d);N=n(u,"H1",{});var At=s(N);Oe=a(At,"Detailed Methodology"),At.forEach(i),Pe=c(u),F=n(u,"H2",{});var kt=s(F);je=a(kt,"Downtown Geography Selection"),kt.forEach(i),Me=c(u),V=n(u,"P",{});var It=s(V);He=a(It,"Our previous method for creating downtown polygons involved selecting zip codes with the highest job density. Our updated polygon definitions are more precise and do not rely as heavily on administrative or census boundaries, which often do not reflect the actual geographies of cities’ downtowns."),It.forEach(i),Be=c(u),p=n(u,"P",{});var w=s(p);xe=a(w,"To create these new definitions, we used jobs data from 2019 ("),z=n(w,"A",{href:!0});var qt=s(z);We=a(qt,"in the U.S."),qt.forEach(i),Ge=a(w,") and 2016 ("),C=n(w,"A",{href:!0});var Dt=s(C);$e=a(Dt,"in Canada"),Dt.forEach(i),Ne=a(w,"). We generated 1 randomly scattered point for every 100 jobs in each block (in the U.S.) or dissemination area (in Canada). We then applied the "),A=n(w,"A",{href:!0});var Ut=s(A);Fe=a(Ut,"HDBSCAN"),Ut.forEach(i),Ve=a(w," algorithm to each city individually to create clusters of points within the city, discarding the points designated as “noise” and tuning the parameters to select a cluster representing each city’s downtown. For this step, we validated these geographies using Google Maps, cities’ own definitions of their downtowns, our personal knowledge of certain cities, and Brookings’ 2023 "),k=n(w,"A",{href:!0});var Ot=s(k);Re=a(Ot,"definitions of downtowns"),Ot.forEach(i),Je=a(w," across the U.S. Next, we created a buffer around each point in the cluster and created a polygon from the spatial union of these buffers. Lastly, we formed a "),I=n(w,"A",{href:!0});var Pt=s(I);Le=a(Pt,"concave hull"),Pt.forEach(i),Ye=a(w," around this polygon to create the final downtown area."),w.forEach(i),Ke=c(u),R=n(u,"H2",{});var jt=s(R);Qe=a(jt,"Standardization"),jt.forEach(i),Xe=c(u),J=n(u,"P",{});var Mt=s(J);Ze=a(Mt,"Because fluctuations in unique device counts over time may reflect changes in sample sizes from data providers rather than actual changes in activity, we standardized the downtown counts using larger geographies. In other words, instead of tracking the raw numbers of unique devices in a downtown area over time, we tracked unique device counts in the downtown divided by unique device counts in a larger area."),Mt.forEach(i),et=c(u),L=n(u,"P",{});var Ht=s(L);tt=a(Ht,"In our previous method, this “larger area” was the state (in the U.S.) or province (in Canada). Our updated method instead standardizes the data using core based statistical areas (in the U.S.) and census metropolitan areas (in Canada). Standardization using these smaller areas results in more accurate recovery rates, since a city’s downtown is not affected by the activity patterns of other cities in the same state."),Ht.forEach(i),at=c(u),Y=n(u,"H2",{});var Bt=s(Y);it=a(Bt,"Data Providers & Imputation"),Bt.forEach(i),ot=c(u),S=n(u,"P",{});var ae=s(S);nt=a(ae,"Spectus, a data provider, sources information from two different providers. Although one provider supplies the counts of mobile phone data between 2019 and 2023 in the US and Canada, the sample size of the data has been significantly declined, which is likely to hinder the accuracy of estimated recovery rates. On the other hand, another provider offers more comprehensive data covering the US and Canada, but this provider does not include Canadian data before May 2021. To address this gap, we employed the Self-Attention-based Imputation for Time Series (SAITS) model developed by "),q=n(ae,"A",{href:!0});var xt=s(q);st=a(xt,"Wenjie, David, & Yan in 2023"),xt.forEach(i),rt=a(ae,". Before initiating the imputation process, our underlying hypothesis for imputation was that if we had Canadian data before May 2021, it might show trends similar to those in the US and Canadian cities for two providers."),ae.forEach(i),dt=c(u),K=n(u,"P",{});var Wt=s(K);ht=a(Wt,"The SAITS model, which employs self-attention techniques, is well-known for capturing dependencies in sequential data, similar to its use in language translation. The approach helps identify relationships within time series data and impute missing information based on observed trends. The overall process of SAITS is that it first converts randomly selected observed values into missing values. Through a series of operations, the model results in the predicted missing values. Finally, the model compares the predicted and original values of artificially created missing values, which allows us to estimate the accuracy of the imputation. In this process, the model is trained for imputation, and the successfully trained model can impute the missing data."),Wt.forEach(i),lt=c(u),Q=n(u,"P",{});var Gt=s(Q);ct=a(Gt,"We applied the SAITS model to fill in missing data in Canadian cities from Jan 2019 to May 2021, with a focus on normalizing user ratios. To achieve this goal, the weekly normalizing user ratios data of cities in the US and Canada by two providers was built. Observed data was filled with actual values, whereas the missing data was filled with no value. This resulted in a matrix in which the rows and columns showed the week and value of two providers of all study areas, respectively. After preparing the data, we flipped it chronologically and split it into training and test sets. The training set included 70% of the data, and the remaining part served as the test data. Hyperparameters were tuned through grid search, considering the number of iterations, learning rates, and dropout rates. The model's performance was evaluated using Root Mean Squared Error (RMSE). We found that 130 iterations, 0.001 learning rates, and 0.2 dropout rates were the best combination. Based on the trained model using this hyperparameter combination, the missing data was imputed."),Gt.forEach(i),u.forEach(i),ut=c(v),X=n(v,"DIV",{class:!0}),s(X).forEach(i),v.forEach(i),this.h()},h(){g(_,"href","/downtowns-hbscan.geojson"),g(T,"href","https://github.com/schoolofcities/downtown-recovery"),g(r,"class","text"),g($,"class","text"),g(z,"href","https://lehd.ces.census.gov/data/"),g(C,"href","http://odesi2.scholarsportal.info/documentation/CENSUS/2016/cen16labour.html"),g(A,"href","https://scikit-learn.org/stable/modules/generated/sklearn.cluster.HDBSCAN.html"),g(k,"href","https://www.brookings.edu/articles/breaking-the-urban-doom-loop-the-future-of-downtowns-is-shared-prosperity/"),g(I,"href","https://shapely.readthedocs.io/en/stable/reference/shapely.concave_hull.html#shapely.concave_hull"),g(q,"href","https://doi.org/10.1016/j.eswa.2023.119619"),g(d,"class","text"),g(X,"class","text")},m(f,v){Yt(y,f,v),$t(f,Z,v),$t(f,m,v),e(m,r),e(r,D),e(D,ie),e(r,oe),e(r,U),e(U,ne),e(r,se),e(r,O),e(O,re),e(r,de),e(r,P),e(P,he),e(r,le),e(r,j),e(j,ce),e(r,ue),e(r,M),e(M,pe),e(r,fe),e(r,b),e(b,me),e(b,_),e(_,ve),e(b,we),e(r,ge),e(r,H),e(H,ye),e(r,be),e(r,B),e(B,Se),e(r,_e),e(r,x),e(x,Ee),e(r,Te),e(r,W),e(W,ze),e(r,Ce),e(r,G),e(G,Ae),e(r,ke),e(r,E),e(E,Ie),e(E,T),e(T,qe),e(m,De),e(m,$),e(m,Ue),e(m,d),e(d,N),e(N,Oe),e(d,Pe),e(d,F),e(F,je),e(d,Me),e(d,V),e(V,He),e(d,Be),e(d,p),e(p,xe),e(p,z),e(z,We),e(p,Ge),e(p,C),e(C,$e),e(p,Ne),e(p,A),e(A,Fe),e(p,Ve),e(p,k),e(k,Re),e(p,Je),e(p,I),e(I,Le),e(p,Ye),e(d,Ke),e(d,R),e(R,Qe),e(d,Xe),e(d,J),e(J,Ze),e(d,et),e(d,L),e(L,tt),e(d,at),e(d,Y),e(Y,it),e(d,ot),e(d,S),e(S,nt),e(S,q),e(q,st),e(S,rt),e(d,dt),e(d,K),e(K,ht),e(d,lt),e(d,Q),e(Q,ct),e(m,ut),e(m,X),ee=!0},p:Kt,i(f){ee||(Qt(y.$$.fragment,f),ee=!0)},o(f){Xt(y.$$.fragment,f),ee=!1},d(f){Zt(y,f),f&&i(Z),f&&i(m)}}}class sa extends Ft{constructor(y){super(),Vt(this,y,null,aa,Rt,{})}}export{sa as component,na as universal};
